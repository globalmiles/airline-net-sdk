/*
 * GlobalMilesAirlineAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.Linq;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using GlobalMilesAirlineAPI.Standard;
using GlobalMilesAirlineAPI.Standard.Utilities;

namespace GlobalMilesAirlineAPI.Standard.Models
{
    [JsonConverter(typeof(StringValuedEnumConverter))]
    public enum CardTypeEnum
    {
        UNKNOWN, //Unknown
        BASIC, //Basic
        RED, //Red
        SILVER, //Silver
        GOLD, //Gold
        PLATINUM, //Platinum
        DIAMOND, //Diamond
        CORPARATE, //Corparate
    }

    /// <summary>
    /// Helper for the enum type CardTypeEnum
    /// </summary>
    public static class CardTypeEnumHelper
    {
        //string values corresponding the enum elements
        private static List<string> stringValues = new List<string> { "unknown", "basic", "red", "silver", "gold", "platinum", "diamond", "corparate" };

        /// <summary>
        /// Converts a CardTypeEnum value to a corresponding string value
        /// </summary>
        /// <param name="enumValue">The CardTypeEnum value to convert</param>
        /// <returns>The representative string value</returns>
        public static string ToValue(CardTypeEnum enumValue)
        {
            switch(enumValue)
            {
                //only valid enum elements can be used
                //this is necessary to avoid errors
                case CardTypeEnum.UNKNOWN:
                case CardTypeEnum.BASIC:
                case CardTypeEnum.RED:
                case CardTypeEnum.SILVER:
                case CardTypeEnum.GOLD:
                case CardTypeEnum.PLATINUM:
                case CardTypeEnum.DIAMOND:
                case CardTypeEnum.CORPARATE:
                    return stringValues[(int)enumValue];

                //an invalid enum value was requested
                default:
                    return null;
            }
        }

        /// <summary>
        /// Convert a list of CardTypeEnum values to a list of strings
        /// </summary>
        /// <param name="enumValues">The list of CardTypeEnum values to convert</param>
        /// <returns>The list of representative string values</returns>
        public static List<string> ToValue(List<CardTypeEnum> enumValues)
        {
            if (null == enumValues)
                return null;

            return enumValues.Select(eVal => ToValue(eVal)).ToList();
        }

        /// <summary>
        /// Converts a string value into CardTypeEnum value
        /// </summary>
        /// <param name="value">The string value to parse</param>
        /// <returns>The parsed CardTypeEnum value</returns>
        public static CardTypeEnum ParseString(string value)
        {
            int index = stringValues.IndexOf(value);
            if(index < 0)
                throw new InvalidCastException(string.Format("Unable to cast value: {0} to type CardTypeEnum", value));

            return (CardTypeEnum) index;
        }
    }
} 