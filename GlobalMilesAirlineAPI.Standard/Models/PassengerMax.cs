/*
 * GlobalMilesAirlineAPI.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using GlobalMilesAirlineAPI.Standard;
using GlobalMilesAirlineAPI.Standard.Utilities;


namespace GlobalMilesAirlineAPI.Standard.Models
{
    public class PassengerMax : BaseModel 
    {
        // These fields hold the values for the public properties.
        private string firstName;
        private string lastName;
        private string mobile;
        private string email;
        private Models.LanguageTypeEnum? language = Models.LanguageTypeEnum.EN;
        private Models.GenderTypeEnum? gender;
        private string birthday;

        /// <summary>
        /// First name of the passenger. Maximum length is 40 characters.
        /// </summary>
        [JsonProperty("first_name")]
        public string FirstName 
        { 
            get 
            {
                return this.firstName; 
            } 
            set 
            {
                this.firstName = value;
                onPropertyChanged("FirstName");
            }
        }

        /// <summary>
        /// Last name of the passenger. Maximum length is 40 characters.
        /// </summary>
        [JsonProperty("last_name")]
        public string LastName 
        { 
            get 
            {
                return this.lastName; 
            } 
            set 
            {
                this.lastName = value;
                onPropertyChanged("LastName");
            }
        }

        /// <summary>
        /// Mobile phone number of the passenger. It is a unique identifier for passengers in the system. The format is E.164.
        /// </summary>
        [JsonProperty("mobile")]
        public string Mobile 
        { 
            get 
            {
                return this.mobile; 
            } 
            set 
            {
                this.mobile = value;
                onPropertyChanged("Mobile");
            }
        }

        /// <summary>
        /// Email address of the passenger.
        /// </summary>
        [JsonProperty("email")]
        public string Email 
        { 
            get 
            {
                return this.email; 
            } 
            set 
            {
                this.email = value;
                onPropertyChanged("Email");
            }
        }

        /// <summary>
        /// The language of the passenger. Possible values are 'en' and 'tr'. Default value is 'en'.
        /// </summary>
        [JsonProperty("language", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.LanguageTypeEnum? Language 
        { 
            get 
            {
                return this.language; 
            } 
            set 
            {
                this.language = value;
                onPropertyChanged("Language");
            }
        }

        /// <summary>
        /// Gender of the passenger. The possible values are 'female', 'male' or 'unknown'.
        /// </summary>
        [JsonProperty("gender", ItemConverterType = typeof(StringValuedEnumConverter))]
        public Models.GenderTypeEnum? Gender 
        { 
            get 
            {
                return this.gender; 
            } 
            set 
            {
                this.gender = value;
                onPropertyChanged("Gender");
            }
        }

        /// <summary>
        /// Birthday of the passenger. The possible values are a date with YYYYMMDD formatted or null.
        /// </summary>
        [JsonProperty("birthday")]
        public string Birthday 
        { 
            get 
            {
                return this.birthday; 
            } 
            set 
            {
                this.birthday = value;
                onPropertyChanged("Birthday");
            }
        }
    }
} 